name: Build container

on:
  workflow_call:
    inputs:
      docker_folder:
        required: true
        type: string
      tag:
        required: true
        type: string
      environment:
        required: false
        type: string
        default: ''
      push:
        required: true
        type: boolean
    secrets:
      docker_username:
        required: true
      docker_password:
        required: true
env:
  DOCKER_FOLDER:  ${{ inputs.docker_folder }}
  TAG:  ${{ inputs.tag }}
  DOCKERHUB_IMAGE_ID: "qcdis/"

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
    - uses: actions/checkout@v4

    - name: Build docker
      run: |
          cd $DOCKER_FOLDER && docker build . --file Dockerfile -t $TAG --build-arg "NODE_ENV=${{ inputs.environment }}"

    - name: Run docker compose
      uses: isbang/compose-action@v1.5.1
      with:
        compose-file: "${{ inputs.docker_folder }}/docker-compose.yaml"

    - name: Wait for healthy app
      uses: raschmitt/wait-for-healthy-container/@v1
      with:
        container-name: app
        timeout: 120

    - name: Capture Docker Logs
      if: failure()
      run: |
        echo 'Capturing Docker logs...'
        docker logs app

    - name: Login to github Registry
      if: ${{ inputs.push }}
      uses: docker/login-action@v3
      with:
        registry: "https://index.docker.io/v1/"
        username: ${{ secrets.docker_username }}
        password: ${{ secrets.docker_password }}

    - name: Push image to container Registry
      if: ${{ inputs.push }}
      run: |
        # Change all uppercase to lowercase
        IMAGE_ID=$DOCKERHUB_IMAGE_ID$TAG
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        # Add environment suffix to version
        ENV_SUFFIX=''
        if [ "${{ inputs.environment }}" != '' ]; then
          ENV_SUFFIX="-${{ inputs.environment }}"
        fi
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        echo ENV_SUFFIX=$ENV_SUFFIX
        docker tag $TAG $IMAGE_ID:$VERSION$ENV_SUFFIX
        if [ "${{ secrets.docker_password }}" != '' ]; then
          docker push $IMAGE_ID:$VERSION$ENV_SUFFIX
          docker tag $TAG $IMAGE_ID:latest$ENV_SUFFIX
          docker push $IMAGE_ID:latest$ENV_SUFFIX
        fi
