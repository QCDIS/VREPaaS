# # Install dependencies only when needed
# FROM node:19-alpine AS deps
# # Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
# RUN apk add --no-cache libc6-compat
# WORKDIR /app
# # COPY package.json ./
# # RUN yarn install --frozen-lockfile
#
# # If using npm with a `package-lock.json` comment out above and use below instead
# COPY ./package.json ./
# RUN npm install
# RUN npm ci
#
# # Rebuild the source code only when needed
# FROM node:19-alpine AS builder
# WORKDIR /app
# COPY --from=deps /app/node_modules ./node_modules
#
# COPY . .
# # Next.js collects completely anonymous telemetry data about general usage.
# # Learn more here: https://nextjs.org/telemetry
# # Uncomment the following line in case you want to disable telemetry during the build.
# # ENV NEXT_TELEMETRY_DISABLED 1
#
# #RUN yarn build
#
# # If using npm comment out above and use below instead
# # RUN npm run build
#
# RUN NEXT_PUBLIC_ENV_VRE_API_URL=APP_NEXT_PUBLIC_ENV_VRE_API_URL npm run build
#
# # Production image, copy all the files and run next
# FROM node:19-alpine AS runner
# WORKDIR /app
#
# # ENV NODE_ENV production
# # Uncomment the following line in case you want to disable telemetry during runtime.
# ENV NEXT_TELEMETRY_DISABLED 1
#
# RUN addgroup --system --gid 1001 nodejs
# RUN adduser --system --uid 1001 nextjs
#
# # You only need to copy next.config.js if you are NOT using the default configuration
# # COPY --from=builder /app/next.config.js ./
# COPY --from=builder /app/public ./public
# COPY --from=builder /app/package.json ./package.json
#
# # Automatically leverage output traces to reduce image size
# # https://nextjs.org/docs/advanced-features/output-file-tracing
# COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
# COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static
#
# COPY entrypoint.sh ./entrypoint.sh
# RUN chown -R nextjs:nodejs /app
# RUN chmod +x ./entrypoint.sh
#
# USER nextjs
#
# EXPOSE 3000
#
# ENV PORT 3000
#
# ENTRYPOINT ["/app/entrypoint.sh"]
# CMD ["node", "server.js"]


FROM node:19-alpine3.16

WORKDIR /app

ENV NODE_ENV production
ENV NEXT_TELEMETRY_DISABLED 1

ADD ./package.json ./
RUN npm install

ADD . .
ADD .env ./

RUN chmod +x -R .

EXPOSE 3000
# CMD ["npm", "run", "dev"]
CMD ["npm", "run", "start"]



